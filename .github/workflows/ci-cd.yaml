name: Flutter Desktop CI/CD

on:
  pull_request:
    types: [opened, synchronize, closed]
    branches: [dev,main]

jobs:

  set-environment:
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest
    outputs:
      environment: ${{ steps.set-environment.outputs.environment }}
    steps:
      - name: set environment
        id: set-environment
        run: |
          echo ${{ github.base_ref }}
          echo "environment=dev" >> $GITHUB_OUTPUT
          if [ ${{ github.base_ref }} == "main" ]; then
            echo "environment=prod" >> $GITHUB_OUTPUT
          fi
      - name: check environment
        run: echo ${{ steps.set-environment.outputs.environment }}

  build:
    environment: ${{ needs.set-environment.outputs.environment }}
    strategy:
      matrix:
        os: [windows-latest, macos-latest]
        include:
          - os: windows-latest
            build: windows
          - os: macos-latest
            build: macos
    runs-on: ${{ matrix.os }}
    needs: [set-environment]
    steps:
      - uses: actions/checkout@v4
      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: stable
          flutter-version: '3.19.4'
          
      - name: Clean pub cache
        run: |
          flutter clean
          if [ "${{ matrix.os }}" == "windows-latest" ]; then
            Remove-Item -Recurse -Force $env:USERPROFILE\.pub-cache
          else
            rm -rf ~/.pub-cache
          fi
          
      - name: Install dependencies
        run: |
          flutter pub cache repair
          flutter pub get --verbose
        
      - name: Run build_runner
        run: flutter pub run build_runner build --delete-conflicting-outputs
        
      - name: Build desktop app
        run: flutter build ${{ matrix.build }} --release
        
      - name: Upload Windows artifact
        if: matrix.os == 'windows-latest'
        id: upload-windows-artifact
        uses: actions/upload-artifact@v4
        with:
          name: windows-release
          path: build/windows/x64/runner/Release/
          
      - name: Upload macOS artifact
        if: matrix.os == 'macos-latest'
        id: upload-macos-artifact
        uses: actions/upload-artifact@v4
        with:
          name: macos-release
          path: build/macos/Build/Products/Release/

      - name: Notify Slack on Success
        if: always()
        uses: slackapi/slack-github-action@v1.24.0
        with:
          payload: |
            {
              "text": "${{ job.status == 'success' && '✅' || '❌' }} Flutter Desktop ${{ matrix.build }} 빌드\n배포환경: ${{ needs.set-environment.outputs.environment }}\n성공 유무: ${{ job.status }}\nOS: ${{ matrix.os }}\n저장소: ${{ github.repository }}\n브랜치: ${{ github.ref }}\n\n아티팩트 다운로드: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}"
            }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
          SLACK_WEBHOOK_TYPE: INCOMING-WEBHOOK